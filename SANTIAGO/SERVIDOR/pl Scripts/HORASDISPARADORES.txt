create or replace trigger SOLOPROFE
before delete or insert or update
on emple2
begin 
  if user <> 'PROFE' then
  RAISE_APPLICATION_ERROR  (-20000, 'SOLO EL PROFE PUEDE TOCAR TABLAS');
  
  END IF;
  END SOLOPROFE;

-----------------------------------




CREATE OR REPLACE TRIGGER SOLOHORAS 
BEFORE DELETE OR INSERT 
ON DEPART
DECLARE 
HORA PLS_INTEGER;
BEGIN
  HORA:= TO_NUMBER(TO_CHAR(SYSDATE,'HH24'),'99');
  IF HORA >= 18
    OR HORA <=9
    THEN
       RAISE_APPLICATION_ERROR (-20000, 'NO SON HORAS');
       END IF;
       DBMS_OUTPUT.PUT_LINE('REALIZADO POR ' || USER);
       DBMS_OUTPUT.PUT_LINE('HORA ' || HORA);
      
    END SOLOHORAS;


------------------------------------------------------------

CREATE TABLE AUDITAEMPLE (NUM NUMBER(4),
			USU VARCHAR2(30),
			ANTE NUMBER,
			NUEVO NUMBER,
			FECHA DATE);

-----------------------------------------
CREATE OR REPLACE TRIGGER TACTUALIZAEMPLE1
AFTER UPDATE OF SALARIO
-- AUNQUE ES OPCIONAL EL PONER OF SALARIO GARANTIZAMOS QUE
-- SE DISPARA SI SE UPDDATE EL SALARIO Y NO OTRO CAMPO 
-- QUE NOS REPETIRIA EL SALARIO ACTUAL Y EL POSTERIOR
ON EMPLE
FOR EACH ROW
BEGIN
INSERT INTO AUDITAEMPLE
VALUES (:OLD.emp_no, USER, :OLD.salario, :NEW.salario, SYSDATE);
DBMS_OUTPUT.PUT_LINE('GENERADA AUDITORIA');
END TACTUALIZAEMPLE1;


--------------------

CREAMOS UNA SECUENCIA SECASIGNATURAS CUANDO INSERTEMOS EN LA TABLA ASIGNATURAS NO HACE FALTA QUE
LE DEMOS UN VALOR AL CAMPO OBLIGATORIO COD (PRIMARY KEY)
AUTOMATICAMENTE EL DISPARADOR PROPORCIONA UN VALOR
INCLUSO AUNQUE LE PROPORCIONEMOS EL VALOR SE INSERTATARA SIEMPRE ELNUEVO VALOR DE LA SECUENCIA EN EL CAMPO
OBLIGATORIO INSERT INTO ASIGNATURAS (MNOMBRE) VALUES ('ORACLE')
-------------

     -- INSERT INTO AUDITAEMPLE   (NUM, USU, NUEVO, FECHA)VALUES (1, 'JAVIER', 2000, SYSDATE);
      SELECT * FROM AUDITAEMPLE;
      UPDATE EMPLE SET SALARIO = 55 WHERE DEPT_NO =10;
      ROLLBACK;

-------------------------------

CREATE OR REPLACE TRIGGER ASEGUROCLAVEASIGNATURAS
BEFORE INSERT
ON ASIGNATURAS 
FOR EACH ROW
  BEGIN
  SELECT SECASIGNATURAS.NEXTVAL
  INTO :NEW.COD
  FROM DUAL;
  END ASEGUROASIGNATURAS;

------------------------

 INSERT INTO ASIGNATURAS(ASIGNATURAS.NOMBREASIG) VALUES ('MATEMATICAS');
INSERT INTO ASIGNATURAS  VALUES (6,'ORACLE');

----------------------

LOS TRIGGER CON FOLLOW SOLO FUNCIONAN EN LOS QUE SEAN TIPO FOR EACH ROW
-- ESTO SOLO TIRA LA EJECUCION EN LA TUPLA AFECTADA GRACIAS AL WHEN
CREATE OR REPLACE TRIGGER CONTROLASUBIDA
BEFORE UPDATE OF SALARIO
-- OLD Y NEW DENTRO DEL WHEN NO LLEVAN LOS DOS PUNTOS :
ON EMPLE 
FOR EACH ROW
WHEN (NEW.SALARIO< OLD.SALARIO)
BEGIN
DBMS_OUTPUT.PUT_LINE('EL SALARIO ' || :NEW.SALARIO ||' ES MENOR AL ACTUAL');
RAISE_APPLICATION_ERROR(-20000, ' ERROR EN LA ACTUALIZACION');
END CONTROLASUBIDA;

----------------------------
-- ESTO SOLO TIRA(O PARA) LA EJECUCION EN LA TUPLA AFECTADA GRACIAS AL WHEN

CREATE OR REPLACE TRIGGER CONTROLASUBIDA2
BEFORE UPDATE OF SALARIO
-- OLD Y NEW DENTRO DEL WHEN NO LLEVAN LOS DOS PUNTOS :
ON EMPLE 
FOR EACH ROW
WHEN (NEW.SALARIO> OLD.SALARIO + OLD.SALARIO*0.1)
BEGIN
DBMS_OUTPUT.PUT_LINE('EL SALARIO ' || :NEW.SALARIO ||' ES SUPONE INCREMENTO SUPERIROR AL 10 %');
RAISE_APPLICATION_ERROR(-20001, ' ERROR EN LA ACTUALIZACION');
END CONTROLASUBIDA2;

------------------------------


CREATE TABLE DATOSEMPLE(DEPARTAMENTO NUMBER(2), EMPLEADOS NUMBER (4), SALARIO NUMBER);
CREATE OR REPLACE TRIGGER ESTADISTICAEMPLE
AFTER INSERT OR DELETE OR UPDATE
ON EMPLE
-- OJO POR QUE SI EL TRIGER ES BEFORE NO SE ACTUALIZA LA ESTADISTICA

DECLARE CURSOR C1 
IS SELECT DEPT_NO, COUNT (*) TOTAL, SUM (SALARIO) SUMA
FROM EMPLE
GROUP BY DEPT_NO;

BEGIN FOR REG_C1 IN C1
LOOP
UPDATE DATOSEMPLE
SET DEPARTAMENTO = REG_C1.DEPT_NO,
EMPLEADOS =REG_C1.TOTAL,
SALARIO =REG_C1.SUMA
WHERE DEPARTAMETO  = REG_C1.DEPT_NO;
IF SQL%NOTFOUND
THEN
INSERT INTO DATOSEMPLE
VALUES (REG_C1.DEPT_NO, REG_C1.TOTAL, REG_C1.SUMA);
END IF;
END LOOP;
DBMS_OUTPUT.PUT_LINE('ESTADISITCA ACTIALUZADA');

EXCEPTION 
WHEN OTHERS
THEN 
DBMS_OUTPUT.PUT_LINE('ERROR NUM ' ||SQLCODE ||' .TEXTO: ' || SQLERRM);
END ESTADISTICAEMPLE;

-------------
ALTER TABLE table_name DISABLE ALL TRIGGERS;

--------------------------------------------------
