select ex.id_alumno, alu.nombre, pro.nombre, count(ex.id_alumno)
from examenes ex
inner join alumnosex alu
on ex.id_alumno= alu.id
inner join provincias pro
on alu.id_provincia=pro.id
group by ex.id_alumno, alu.nombre, pro.nombre
having ex.id_alumno not in (select  id_alumno from examenes where nota>4)
and count(ex.id_alumno) = (select count(*) from asignaturaex) ;
--------------------------------------
--examenes alumnosex provincias
  select examenes.id_asignatura , count(id_alumno) cantidad from examenes 
group by id_asignatura ; -- having nota >5;

 select COUNT(examenes.id_asignatura) CANT_EX_REALIZADOS , id_alumno from examenes 
group by ID_ALUMNO HAVING ID_ALUMNO IN ( SELECT  ID_ALUMNO FROM EXAMENES WHERE NOTA<5)
and count(id_alumno) = 5 ;

SELECT COUNT(ID_ALUMNO) C_EXAMENES, ID_ALUMNO, NOTA FROM EXAMENES 
GROUP BY ID_ALUMNO , NOTA
HAVING NOTA<5
 ORDER BY ID_ALUMNO DESC;
 -- SELECCIONO TODOS LOS EXAMENES SUSPENSOS
 SELECT EX.ID_ALUMNO, AL.NOMBRE, PRO.NOMBRE
  FROM EXAMENES EX INNER JOIN ALUMNOSEX AL
  ON EX.ID_ALUMNO = AL.ID
  INNER JOIN PROVINCIAS PRO
  ON PRO.ID= AL.ID_PROVINCIA
 GROUP BY EX.ID_ALUMNO , AL.NOMBRE, PRO.NOMBRE
 HAVING EX.ID_ALUMNO NOT IN (SELECT ID_ALUMNO FROM EXAMENES WHERE NOTA >4 )
 AND COUNT(EX.ID_ALUMNO) = (SELECT COUNT(*) FROM ASIGNATURAEX)-1
 ORDER BY EX.ID_ALUMNO;

SELECT DISTINCT ID_ASIGNATURA , ID_ALUMNO , NOTA FROM EXAMENES WHERE NOTA >=8;
insert into examenes (id , id_asignatura, nota, id_alumno)
values (22, 6, 8, 11);
insert into asignaturaex values( 6, 'bbDD');
SELECT * FROM EXAMENES ORDER BY ID_ALUMNO ASC;
-- CONECT BY PRIOR
SELECT DIR ,COUNT(*)EMPLEADOS  FROM emple
START WITH APELLIDO='REY'
CONNECT BY PRIOR EMP_NO=  DIR
GROUP BY DIR;

---QUÉ EMPLEADOS TIENE NEGRO
SELECT COUNT(DIR), DIR, APELLIDO FROM EMPLE
GROUP BY DIR, APELLIDO
HAVING DIR = (SELECT EMP_NO FROM EMPLE 
             WHERE APELLIDO='NEGRO');
-- CUANTOS EMPLEADOS TIENE NEGRO
SELECT  COUNT(*),DIR EMPLEADOS_DEL_JEFE_EN_CUESTION FROM EMPLE
GROUP BY DIR;
HAVING DIR = (SELECT EMP_NO FROM EMPLE 
             WHERE APELLIDO='NEGRO');
----
SELECT  COUNT(*) EMPLEADOS_DEL_JEFE ,DIR   
FROM EMPLE INNER JOIN JEFES 
ON EMPLE.EMP_NO = JEFES.EMP_NO
GROUP BY DIR  ;
SELECT COUNT(DIR) FROM EMPLE;
CREATE TABLE JEFES (EMP_NO NUMBER , APELLIDO VARCHAR2(20));
INSERT INTO JEFES (SELECT EMP_NO, APELLIDO FROM EMPLE);

-- OBTENER LOS DATOS DE TRABAJADORES QUE SEAN ANALISTAS
SELECT * FROM EMPLE WHERE EMPLE.OFICIO ='ANALISTA';

--LISTAR SALARIOS Y COMISIONES DE EMPLEADOS DEL DEPT-NO 20 ORDENADO POR COMISION
SELECT SALARIO, NVL(COMISION,0) COMISION FROM EMPLE
WHERE DEPT_NO =30
ORDER BY COMISION ASC;
-- LISTAR TODAS LAS COMISIONES
SELECT NVL(COMISION,0) FROM EMPLE;
---Obtener el valor total a pagar que resulta de sumar a los empleados del departamento 30
-- una bonificación de 500, en orden alfabético del empleado
SELECT APELLIDO, SALARIO, SALARIO+500 SALARIO_ESTIMADO FROM EMPLE
WHERE DEPT_NO = 30

ORDER BY APELLIDO DESC;
-- OBTENER EL GASTO TOTAL EN SALARIOS DE LA EMPRESA EN CASO DE QUE TENGAN QUE PAGAR SALARIO+500 Y BONOS
SELECT SUM(SALARIO+500+NVL(COMISION,0)) CALCULO_TOTAL FROM EMPLE; 
--EMPLEADOS CON UN SUELDO INFERIOR A LA COMISION 
SELECT * FROM EMPLE WHERE SALARIO < COMISION;

---EMPLEADOS CUYA COMISION ES MENOR O IGUAL A UN 30% DEL SUELDO
SELECT COUNT(*) FROM EMPLE WHERE NVL(COMISION,0) <= SALARIO*30;
---OBTENER CUANTOS EMPLEADDOS DE CADA DEPARTAMENTO TIENEN UNA COMISION MENOR AL 30% DEL SALARIO
 SELECT COUNT(*) , DEPT_NO
 FROM EMPLE
 GROUP BY DEPT_NO
  HAVING COMISION <= SALARIO*30;
--
-- 33. Mostrar el código y nombre de cada jefe, junto al número de empleados que dirige.
-- Solo los que tengan mas de dos empleados (2 incluido).
SELECT DIR, COUNT(*) EMPLEADOS_A_CARGO, APELLIDO 
FROM EMPLE
GROUP BY GROUPING SETS (DIR,APELLIDO);
SELECT * FROM EMPLE3;

CREATE TABLE EMPLE AS SELECT * FROM EMPLE3;