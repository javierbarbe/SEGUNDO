create table una (departamento number, campo number);
create table dos(departamento number, campo number);
create table tres(departamento number, campo number);
CREAT OR REPLACE TRIGGER ESTADISTICA ESTADISTICAEMPLE2
AFTER INSERT OR DELETE OR UPDATE ON EMPLE
DECLARE
TYPE MICUR IS REF CURSOR, -> VARIABLE REFERENCIA A CURSOR FUTURO 
TYPE MI_REG IS RECORD
(DEP DEPART.DEPT_NO&TYPE,
DATO NUMBER);
C MICUR;

PROCEDURE ABRIRCUANTOS(C IN OUT MICUR)
 AS
BERGIN 
OPEN C FOR SELECT DEPT_NO, COUNT(*) DATO
FROM EMPLE
GROUP BY DEPT_NO;
END ABRIRCUANTOS;
BEGIN

PROCEDURE ABRIRMEDIAS (C IN OUT MICUR)
AS
BEGIN
OPEN C FOR SELECT DEPT_NO,AVG(SALARIO) DATO -- OPEN C FOR -> LA HACE DINAMICA
FROM EMPLE 
GROUP BY DEPT_NO;
END ABRIRMEDIAS;

PROCEDURE ABRIRSUMAS (C IN OUT MICUR)
AS BEGIN
OPEN C  FOR SELECT DEPT_NO,SUM(SALARIO) DATO-- OPEN C FOR -> LA HACE DINAMICA
FROM EMPLE 
GROUP BY DEPT_NO;
END ABRIRSUMAS ;

PROCEDURE PROCESACUANTOS (C IN OUT MICUR)
AS 
	REG MI_REG
	BEGIN 

	LOOP
		FETCH C INTO REG;
		EXIT WHERE C%NOTFOUND;
		UPDATE UNA
		SET DEPARTAMENTO = REG.DEP,
		CAMPO = REG.DATO
		WHERE DEPARTAMENTO = REG.DEP;
	-- SI NO ENCUNTRA EL DEPARTAMENTO (LA SELECT SERIA NOTFOUND), NO PUEDE HACER UPDATE POR LO TANTO... CREA UN REGISTRO EN LA TABLA UNA CON EL DEPARTAMENTO Y EL DATO----------------
		IF SQL%NOTFOUND  THEN
			INSERT INTO UNA 
			VALUES (REG.DEP,REG.DATO);
		END IF;
	END LOOP;
END PROCESADATOS;
ABRIRCUANTOS(C);PROCESACUANTOS(C);


END ESTADISTICAEMPLE2;
------------------------------------------- BORRAR A TRAVES DE VISTAS ... GRACIAS A UN TRIGGER

CREATE VIEW VISTA AS SELECT DEPT_NO,SUM(SALARIO) TOTAL
FROM EMPLE
GROUP BY DEPT_NO;

SELECT * FROM VISTA;
SELECT * FROM EMPLE;

DELETE FROM VISTA WHERE DEPT_NO = 10; -- NO SE PUEDE PUESTO QUE LA VISTA TIENE UNA FUNCION DE GRUPO
 
--DEBEN SER SIEMPRE A NIVEL DE FILA

CREATE OR REPLACE TRIGGER BORRAVISTA
INSTEAD OF DELETE
ON VISTA 
FOR EACH ROW
BEGIN
DELETE FROM EMPLE WHERE DEPT_NO= :OLD.DEPT_NO;
END BORRAVISTA;

--- NO SE PUEDE HACER COMMIT DENTRO DE UN TRIGGER ... PODEMOS HACER UNA TRANSACCCION AUTONOMA EN SU LUGAR
CREATE OR REPLACE TRIGGER BORRAVISTA
INSTEAD OF DELETE
ON VISTA 
FOR EACH ROW
DECLARE
PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
DELETE FROM EMPLE WHERE DEPT_NO= :OLD.DEPT_NO;
END BORRAVISTA;

-----------------


CREATE TABLE PARAMUTANTE( DEPT NUM , MEDIA NUM);
CREATE OR REPLACE TRIGGER SOLUCIONAMITANTEPARTE1
BEFORE UPDATE OF SALARIO ON EMPLE
FOR EACH ROW

DECLARE CURSOR C1 
IS 
SELECT DEPT_NO , AVG (SALARIO) MEDIA 
FROM EMPLE GROUP BY DEPT_NO

BEGIN FOR REG_C1 IN C1
LOOP
IF :OLD.DEPT_NO = REG_C1.DEPARTAMENTO
	THEN 
	IF :NEW.SALARIO> 2* REG_C1.MEDIA
THEN RAISE_APPLICATION_ERROR(-20000, 'NO SE PERMITE MAS DEL DOBLE');

END IF;
END IF;
END LOOP;


--------------------------------------
-- EJERCICIO NO PUEDE HABER MAS DE 7 EMPLEADOS  POR DEPT; 

SELECT COUNT(*), DEPT_NO FROM EMPLE GROUP BY DEPT_NO;
CREATE TABLE PARAMUTANTEDOS (DEPARTAMENTO NUMBER , CANTIDADEMPLEADOS NUMBER);
UPDATE  EMPLE SET DEPT_NO = 13 WHERE DEPT_NO= 15;
INSERT INTO EMPLE (DEPT_NO , EMP_NO, APELLIDO, FECHA_ALT) VALUES (69,328,'MOY',SYSDATE);
SELECT * FROM PARAMUTANTEDOS;
SELECT * FROM EMPLE; 
-- UN EMPLEADO NO PUEDE TENER MAS DE 7 EMPLEADOS A SU CARGO 
SELECT COUNT(*), DIR FROM EMPLE GROUP BY DIR;
--------------
CREATE OR REPLACE TRIGGER  MUTANTE1
BEFORE UPDATE OR INSERT  
ON EMPLE 
DECLARE CURSOR C1 IS
               SELECT DEPT_NO, COUNT(*) CANTIDADEMPLEADOS
                      FROM EMPLE
                      GROUP BY DEPT_NO;
       BEGIN
         FOR REG_C1 IN C1
           LOOP
             UPDATE PARAMUTANTEDOS
             SET DEPARTAMENTO = REG_C1.DEPT_NO,
             CANTIDADEMPLEADOS = REG_C1.CANTIDADEMPLEADOS
             WHERE DEPARTAMENTO = REG_C1.DEPT_NO;
             IF SQL%NOTFOUND THEN
                INSERT INTO PARAMUTANTEDOS (DEPARTAMENTO, CANTIDADEMPLEADOS)
                VALUES (REG_C1.DEPT_NO, REG_C1.CANTIDADEMPLEADOS);
               END IF;
               IF  REG_C1.CANTIDADEMPLEADOS > 10 THEN

                RAISE_APPLICATION_ERROR(-20000, 'NO PUEDEN HABER MAS DE 10 EMPLEADOS');
              END IF;
              END LOOP;
              
              END MUTANTE1;

-----------------------------------------------------------
CREATE OR REPLACE TRIGGER  MUTANTE2
BEFORE UPDATE OR INSERT  
ON EMPLE 
DECLARE CURSOR C1 IS
                SELECT COUNT(*) CANTIDAD, DIR FROM EMPLE GROUP BY DIR;
                    
                      
       BEGIN
         FOR REG_C1 IN C1
           LOOP
             UPDATE PARAMUTANTERTRES
             SET CANTEMPLEADOS = REG_C1.CANTIDAD,
             JEFE = REG_C1.DIR
             WHERE JEFE = REG_C1.DIR;
             IF SQL%NOTFOUND THEN
                INSERT INTO PARAMUTANTERTRES (CANTEMPLEADOS, JEFE)
                VALUES (REG_C1.CANTIDAD, REG_C1.DIR);
               END IF;
               IF  REG_C1.CANTIDAD > 10 THEN
               DBMS_OUTPUT.put_line(' EL REG_C1 VALE ' || REG_C1.DIR);
                RAISE_APPLICATION_ERROR(-20000, 'NO PUEDEN HABER MAS DE 7 EMPLEADOS POR JEFE');
              END IF;
              END LOOP;
              
              END MUTANTE2;